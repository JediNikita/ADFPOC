{
	"name": "RecordCountCheck",
	"properties": {
		"activities": [
			{
				"name": "CountingRowsDataFlow",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CountingRowsDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"FileNameCR": {
								"value": "'@{replace(pipeline().parameters.FileName, '''', '')}'",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 48,
						"computeType": "General"
					},
					"traceLevel": "None",
					"cacheSinks": {
						"firstRowOnly": true
					}
				}
			},
			{
				"name": "ExtractFooter",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ExtractFooter",
						"type": "DataFlowReference",
						"parameters": {
							"FileNameEF": {
								"value": "'@{replace(pipeline().parameters.FileName, '''', '')}'",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 48,
						"computeType": "General"
					},
					"traceLevel": "None",
					"cacheSinks": {
						"firstRowOnly": true
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CountingRowsDataFlow",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "ExtractFooter",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('CountingRowsDataFlow').output.runStatus.output.RowCountSink.value[0].SNo, activity('ExtractFooter').output.runStatus.output.RowCountSink.value[0].CountOfRecords)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "WaitFalse",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "CopyToFailurePatternMatching",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "WaitFalse",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": "input",
										"wildcardFileName": {
											"value": "@replace(pipeline().parameters.FileName, '''', '')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SecurityMasterBlob",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SMPatternMatchingFailure",
									"type": "DatasetReference",
									"parameters": {
										"FileNameFailure": {
											"value": "@replace(pipeline().parameters.FileName, '''', '')",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "WaitRCTrue",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "RemoveHeaderAndFooterPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "WaitRCTrue",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "RemoveHeaderAndFooterPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"FileName": {
				"type": "string",
				"defaultValue": "f6600af400.ext.210701.2"
			}
		},
		"folder": {
			"name": "PatternMatching"
		},
		"annotations": []
	}
}